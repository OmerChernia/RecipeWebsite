{"ast":null,"code":"import React,{useState,useEffect}from'react';import api from'../services/api';// Use the configured API instance\nimport{useNavigate}from'react-router-dom';const AddRecipe=()=>{const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[ingredients,setIngredients]=useState('');const[instructions,setInstructions]=useState('');const[cookingTime,setCookingTime]=useState('');const[servings,setServings]=useState('');const[category,setCategory]=useState('');const[image,setImage]=useState(null);const[categories,setCategories]=useState([]);const navigate=useNavigate();useEffect(()=>{fetchCategories();},[]);const fetchCategories=async()=>{try{const res=await api.get('/categories');setCategories(res.data);}catch(error){console.error('Error fetching categories:',error);}};const handleSubmit=async e=>{e.preventDefault();const formData=new FormData();formData.append('title',title);formData.append('description',description);formData.append('ingredients',JSON.stringify(ingredients.split('\\n')));// Split into array\nformData.append('instructions',JSON.stringify(instructions.split('\\n')));// Split into array\nformData.append('cookingTime',cookingTime);formData.append('servings',servings);formData.append('category',category);if(image)formData.append('image',image);try{const response=await api.post('/recipes',formData,{headers:{'Content-Type':'multipart/form-data'}});alert('Recipe added successfully!');navigate(`/recipe/${response.data._id}`);// Navigate to the new recipe\n}catch(err){console.error(err);alert('Error adding recipe');}};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,className:\"add-recipe-form\"},/*#__PURE__*/React.createElement(\"h2\",null,\"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05DE\\u05EA\\u05DB\\u05D5\\u05DF \\u05D7\\u05D3\\u05E9\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"\\u05DB\\u05D5\\u05EA\\u05E8\\u05EA\",value:title,onChange:e=>setTitle(e.target.value),required:true}),/*#__PURE__*/React.createElement(\"textarea\",{placeholder:\"\\u05EA\\u05D9\\u05D0\\u05D5\\u05E8\",value:description,onChange:e=>setDescription(e.target.value),required:true}),/*#__PURE__*/React.createElement(\"textarea\",{placeholder:\"\\u05DE\\u05E6\\u05E8\\u05DB\\u05D9\\u05DD (\\u05D0\\u05D7\\u05D3 \\u05D1\\u05DB\\u05DC \\u05E9\\u05D5\\u05E8\\u05D4)\",value:ingredients,onChange:e=>setIngredients(e.target.value),required:true}),/*#__PURE__*/React.createElement(\"textarea\",{placeholder:\"\\u05D4\\u05D5\\u05E8\\u05D0\\u05D5\\u05EA \\u05D4\\u05DB\\u05E0\\u05D4 (\\u05D0\\u05D7\\u05EA \\u05D1\\u05DB\\u05DC \\u05E9\\u05D5\\u05E8\\u05D4)\",value:instructions,onChange:e=>setInstructions(e.target.value),required:true}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",placeholder:\"\\u05D6\\u05DE\\u05DF \\u05D1\\u05D9\\u05E9\\u05D5\\u05DC (\\u05D1\\u05D3\\u05E7\\u05D5\\u05EA)\",value:cookingTime,onChange:e=>setCookingTime(e.target.value),required:true}),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",placeholder:\"\\u05DB\\u05DE\\u05D5\\u05EA \\u05D4\\u05D2\\u05E9\\u05D5\\u05EA \\u05DC\\u05DE\\u05E0\\u05D4\",value:servings,onChange:e=>setServings(e.target.value),required:true}),/*#__PURE__*/React.createElement(\"select\",{value:category,onChange:e=>setCategory(e.target.value),required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"\\u05D1\\u05D7\\u05E8 \\u05E7\\u05D8\\u05D2\\u05D5\\u05E8\\u05D9\\u05D4\"),categories.map(cat=>/*#__PURE__*/React.createElement(\"option\",{key:cat._id,value:cat._id},cat.name))),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",onChange:e=>setImage(e.target.files[0]),accept:\"image/*\",required:true}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05DE\\u05EA\\u05DB\\u05D5\\u05DF\"));};export default AddRecipe;","map":{"version":3,"names":["React","useState","useEffect","api","useNavigate","AddRecipe","title","setTitle","description","setDescription","ingredients","setIngredients","instructions","setInstructions","cookingTime","setCookingTime","servings","setServings","category","setCategory","image","setImage","categories","setCategories","navigate","fetchCategories","res","get","data","error","console","handleSubmit","e","preventDefault","formData","FormData","append","JSON","stringify","split","response","post","headers","alert","_id","err","createElement","onSubmit","className","type","placeholder","value","onChange","target","required","map","cat","key","name","files","accept"],"sources":["/Users/omerchernia/CODING/Recepie_Website/client/src/components/AddRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate } from 'react-router-dom';\n\nconst AddRecipe = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [cookingTime, setCookingTime] = useState('');\n  const [servings, setServings] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const res = await api.get('/categories');\n      setCategories(res.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('ingredients', JSON.stringify(ingredients.split('\\n'))); // Split into array\n    formData.append('instructions', JSON.stringify(instructions.split('\\n'))); // Split into array\n    formData.append('cookingTime', cookingTime);\n    formData.append('servings', servings);\n    formData.append('category', category);\n    if (image) formData.append('image', image);\n\n    try {\n      const response = await api.post('/recipes', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        }\n      });\n      alert('Recipe added successfully!');\n      navigate(`/recipe/${response.data._id}`); // Navigate to the new recipe\n    } catch (err) {\n      console.error(err);\n      alert('Error adding recipe');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"add-recipe-form\">\n      <h2>הוסף מתכון חדש</h2>\n      <input type=\"text\" placeholder=\"כותרת\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n      <textarea placeholder=\"תיאור\" value={description} onChange={(e) => setDescription(e.target.value)} required />\n      <textarea placeholder=\"מצרכים (אחד בכל שורה)\" value={ingredients} onChange={(e) => setIngredients(e.target.value)} required />\n      <textarea placeholder=\"הוראות הכנה (אחת בכל שורה)\" value={instructions} onChange={(e) => setInstructions(e.target.value)} required />\n      <input type=\"number\" placeholder=\"זמן בישול (בדקות)\" value={cookingTime} onChange={(e) => setCookingTime(e.target.value)} required />\n      <input type=\"number\" placeholder=\"כמות הגשות למנה\" value={servings} onChange={(e) => setServings(e.target.value)} required />\n      <select value={category} onChange={(e) => setCategory(e.target.value)} required>\n        <option value=\"\">בחר קטגוריה</option>\n        {categories.map(cat => (\n          <option key={cat._id} value={cat._id}>{cat.name}</option>\n        ))}\n      </select>\n      <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} accept=\"image/*\" required />\n      <button type=\"submit\">הוסף מתכון</button>\n    </form>\n  );\n};\n\nexport default AddRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}