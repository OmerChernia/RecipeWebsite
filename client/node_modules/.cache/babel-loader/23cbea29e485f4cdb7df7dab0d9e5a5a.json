{"ast":null,"code":"var _jsxFileName = \"/Users/omerchernia/CODING/Recepie_Website/client/src/components/EditRecipe.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate, useParams } from 'react-router-dom';\nconst EditRecipe = () => {\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState(null);\n  const [categories, setCategories] = useState([]); // Define categories state\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    ingredients: '',\n    instructions: '',\n    cookingTime: '',\n    servings: '',\n    category: '',\n    image: null\n  });\n  useEffect(() => {\n    // Fetch the recipe data\n    api.get(`/recipes/${id}`).then(response => {\n      setRecipe(response.data);\n      setFormData({\n        title: response.data.title,\n        description: response.data.description,\n        ingredients: JSON.stringify(response.data.ingredients),\n        instructions: JSON.stringify(response.data.instructions),\n        cookingTime: response.data.cookingTime,\n        servings: response.data.servings,\n        category: response.data.category,\n        image: response.data.image\n      });\n    }).catch(error => {\n      console.error('Error fetching recipe:', error);\n      alert('Failed to fetch recipe data.');\n    });\n\n    // Fetch categories\n    api.get('/categories').then(response => setCategories(response.data)).catch(error => {\n      console.error('Error fetching categories:', error);\n      alert('Failed to fetch categories.');\n    });\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === 'image') {\n      setFormData({\n        ...formData,\n        image: files[0]\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const updatedData = {\n        ...formData,\n        ingredients: JSON.parse(formData.ingredients),\n        instructions: JSON.parse(formData.instructions)\n      };\n      const response = await api.put(`/recipes/${id}`, updatedData);\n      alert('Recipe updated successfully!');\n      navigate(`/recipe/${response.data._id}`);\n    } catch (error) {\n      console.error('Error updating recipe:', error);\n      alert('Failed to update recipe.');\n    }\n  };\n  if (!recipe) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"edit-recipe-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Edit Recipe\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    value: formData.title,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    placeholder: \"Description\",\n    value: formData.description,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"ingredients\",\n    placeholder: \"Ingredients (JSON format)\",\n    value: formData.ingredients,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"instructions\",\n    placeholder: \"Instructions (JSON format)\",\n    value: formData.instructions,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"cookingTime\",\n    placeholder: \"Cooking Time (minutes)\",\n    value: formData.cookingTime,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"servings\",\n    placeholder: \"Servings\",\n    value: formData.servings,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    value: formData.category,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Select Category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category._id,\n    value: category.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, category.name))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    accept: \"image/*\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"Update Recipe\"));\n};\nexport default EditRecipe;","map":{"version":3,"names":["React","useState","useEffect","api","useNavigate","useParams","EditRecipe","id","navigate","recipe","setRecipe","categories","setCategories","formData","setFormData","title","description","ingredients","instructions","cookingTime","servings","category","image","get","then","response","data","JSON","stringify","catch","error","console","alert","handleChange","e","name","value","files","target","handleSubmit","preventDefault","updatedData","parse","put","_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","placeholder","onChange","required","map","key","accept"],"sources":["/Users/omerchernia/CODING/Recepie_Website/client/src/components/EditRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst EditRecipe = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState(null);\n  const [categories, setCategories] = useState([]); // Define categories state\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    ingredients: '',\n    instructions: '',\n    cookingTime: '',\n    servings: '',\n    category: '',\n    image: null,\n  });\n\n  useEffect(() => {\n    // Fetch the recipe data\n    api.get(`/recipes/${id}`)\n      .then(response => {\n        setRecipe(response.data);\n        setFormData({\n          title: response.data.title,\n          description: response.data.description,\n          ingredients: JSON.stringify(response.data.ingredients),\n          instructions: JSON.stringify(response.data.instructions),\n          cookingTime: response.data.cookingTime,\n          servings: response.data.servings,\n          category: response.data.category,\n          image: response.data.image,\n        });\n      })\n      .catch(error => {\n        console.error('Error fetching recipe:', error);\n        alert('Failed to fetch recipe data.');\n      });\n\n    // Fetch categories\n    api.get('/categories')\n      .then(response => setCategories(response.data))\n      .catch(error => {\n        console.error('Error fetching categories:', error);\n        alert('Failed to fetch categories.');\n      });\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    if (name === 'image') {\n      setFormData({ ...formData, image: files[0] });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const updatedData = {\n        ...formData,\n        ingredients: JSON.parse(formData.ingredients),\n        instructions: JSON.parse(formData.instructions),\n      };\n      const response = await api.put(`/recipes/${id}`, updatedData);\n      alert('Recipe updated successfully!');\n      navigate(`/recipe/${response.data._id}`);\n    } catch (error) {\n      console.error('Error updating recipe:', error);\n      alert('Failed to update recipe.');\n    }\n  };\n\n  if (!recipe) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"edit-recipe-form\">\n      <h2>Edit Recipe</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Title\"\n        value={formData.title}\n        onChange={handleChange}\n        required\n      />\n      <textarea\n        name=\"description\"\n        placeholder=\"Description\"\n        value={formData.description}\n        onChange={handleChange}\n        required\n      />\n      <textarea\n        name=\"ingredients\"\n        placeholder=\"Ingredients (JSON format)\"\n        value={formData.ingredients}\n        onChange={handleChange}\n        required\n      />\n      <textarea\n        name=\"instructions\"\n        placeholder=\"Instructions (JSON format)\"\n        value={formData.instructions}\n        onChange={handleChange}\n        required\n      />\n      <input\n        type=\"number\"\n        name=\"cookingTime\"\n        placeholder=\"Cooking Time (minutes)\"\n        value={formData.cookingTime}\n        onChange={handleChange}\n        required\n      />\n      <input\n        type=\"number\"\n        name=\"servings\"\n        placeholder=\"Servings\"\n        value={formData.servings}\n        onChange={handleChange}\n        required\n      />\n      <select\n        name=\"category\"\n        value={formData.category}\n        onChange={handleChange}\n        required\n      >\n        <option value=\"\">Select Category</option>\n        {categories.map(category => (\n          <option key={category._id} value={category.name}>\n            {category.name}\n          </option>\n        ))}\n      </select>\n      <input\n        type=\"file\"\n        name=\"image\"\n        accept=\"image/*\"\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Update Recipe</button>\n    </form>\n  );\n};\n\nexport default EditRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}