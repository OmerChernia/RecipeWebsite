{"version":3,"sources":["config.js","services/api.js","components/Banner.js","components/CategoryFilter.js","components/RecipeList.js","components/Login.js","components/AddRecipe.js","components/AddCategory.js","components/RecipeDetails.js","components/EditRecipe.js","components/FloatingButtons.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","process","api","axios","create","baseURL","console","log","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","data","status","message","Banner","React","createElement","className","src","alt","Link","to","CategoryFilter","_ref","categories","selectedCategory","onCategoryChange","isAdmin","refreshCategories","onClick","map","category","key","_id","name","async","window","confirm","delete","categoryId","alert","err","deleteCategory","RecipeList","recipes","setRecipes","useState","useEffect","fetchRecipes","res","get","filteredRecipes","filter","recipe","image","title","onError","e","target","onerror","cookingTime","Login","setIsAuthenticated","handleLogin","username","setUsername","password","setPassword","navigate","useNavigate","onSubmit","preventDefault","post","type","placeholder","value","onChange","required","AddRecipe","setTitle","description","setDescription","ingredients","setIngredients","instructions","setInstructions","setCookingTime","servings","setServings","setCategory","setImage","setCategories","fetchCategories","formData","FormData","append","JSON","stringify","split","cat","files","accept","AddCategory","setName","RecipeDetails","setRecipe","id","useParams","fetchRecipe","ingredient","index","instruction","EditRecipe","setFormData","then","catch","updatedData","parse","put","FloatingButtons","isAuthenticated","onLogout","Fragment","App","setIsAdmin","setSelectedCategory","checkAuthStatus","removeItem","Router","Routes","Route","path","element","Navigate","setItem","handleLogout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAO,MAAMA,EAAeC,4BCGtBC,EAAMC,IAAMC,OAAO,CACvBC,QAASL,IAGXM,QAAQC,IAAI,gBAAiBP,GAG7BE,EAAIM,aAAaC,QAAQC,IAAID,IAC3BH,QAAQC,IAAI,mBAAoBE,GACzBA,IAITP,EAAIM,aAAaC,QAAQC,IACtBC,IACC,MAAMC,EAAQC,aAAaC,QAAQ,SAOnC,OANIF,GACFD,EAAOI,QAAuB,cAAI,UAAUH,EAC5CN,QAAQC,IAAI,4BAA6BI,EAAOI,QAAuB,gBAEvET,QAAQC,IAAI,kCAEPI,GAERK,GACQC,QAAQC,OAAOF,IAK1Bd,EAAIM,aAAaW,SAAST,IACvBS,GAAaA,EACbH,IACCV,QAAQU,MAAM,aAAcA,GACxBA,EAAMG,UACRb,QAAQU,MAAM,iBAAkBA,EAAMG,SAASC,MAC/Cd,QAAQU,MAAM,mBAAoBA,EAAMG,SAASE,QACjDf,QAAQU,MAAM,oBAAqBA,EAAMG,SAASJ,UACzCC,EAAMP,QACfH,QAAQU,MAAM,wBAAyBA,EAAMP,SAE7CH,QAAQU,MAAM,4BAA6BA,EAAMM,SAE5CL,QAAQC,OAAOF,KAIXd,Q,kBC3BAqB,MApBAA,IAEXC,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKE,IAAI,YAAYC,IAAI,OAAOF,UAAU,0BAC1CF,IAAAC,cAAA,OAAKE,IAAI,eAAeC,IAAI,UAAUF,UAAU,6BAChDF,IAAAC,cAAA,OAAKE,IAAI,eAAeC,IAAI,UAAUF,UAAU,6BAChDF,IAAAC,cAAA,OAAKE,IAAI,cAAcC,IAAI,SAASF,UAAU,6BAEhDF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAACI,IAAI,CAACC,GAAG,IAAIJ,UAAU,gBACrBF,IAAAC,cAAA,UAAI,2FAEND,IAAAC,cAAA,OAAKC,UAAU,qBACfF,IAAAC,cAAA,SAAG,8LCgCIM,MA9CQC,IAAqF,IAApF,WAAEC,EAAU,iBAAEC,EAAgB,iBAAEC,EAAgB,QAAEC,EAAO,kBAAEC,GAAmBL,EAgBpG,OACER,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UACEa,QAASA,IAAMH,EAAiB,MAChCT,UAAgC,OAArBQ,EAA4B,SAAW,IACnD,OAGAD,EAAWM,IAAIC,GACdhB,IAAAC,cAAA,OAAKgB,IAAKD,EAASE,IAAKhB,UAAU,yBAChCF,IAAAC,cAAA,UACEa,QAASA,IAAMH,EAAiBK,EAASE,KACzChB,UAAWQ,IAAqBM,EAASE,IAAM,SAAW,IAEzDF,EAASG,MAEXP,GAAWF,IAAqBM,EAASE,KACxClB,IAAAC,cAAA,UACEa,QAASA,IAjCEM,WACrB,GAAIC,OAAOC,QAAQ,qMACjB,UACQ5C,EAAI6C,OAAO,eAAeC,GAChCC,MAAM,yHACFZ,GACFA,IAEF,MAAOa,GACP5C,QAAQU,MAAM,2BAA4BkC,GAC1CD,MAAM,0HAuBeE,CAAeX,EAASE,KACvChB,UAAU,uBACX,cCcE0B,MAhDIpB,IAA2B,IAA1B,iBAAEE,GAAkBF,EACtC,MAAOqB,EAASC,GAAcC,mBAAS,IAEvCC,oBAAU,KACRC,KACC,CAACvB,IAEJ,MAAMuB,EAAeb,UACnB,IACEtC,QAAQC,IAAI,yBAA6BP,EAAH,YACtC,MAAM0D,QAAYxD,EAAIyD,IAAI,YAC1BrD,QAAQC,IAAI,mBAAoBmD,EAAItC,MACpCkC,EAAWI,EAAItC,MACf,MAAO8B,GACP5C,QAAQU,MAAM,0BAA2BkC,KAIvCU,EAAuC,OAArB1B,EACpBmB,EACAA,EAAQQ,OAAOC,GAAUA,EAAOtB,UAAYsB,EAAOtB,SAASE,MAAQR,GAExE,OACEV,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,eACZkC,EAAgBrB,IAAIuB,GACnBtC,IAAAC,cAACI,IAAI,CAACC,GAAI,WAAWgC,EAAOpB,IAAOD,IAAKqB,EAAOpB,IAAKhB,UAAU,eAC3DoC,EAAOC,OACNvC,IAAAC,cAAA,OACEE,IAAK,wBAAoBmC,EAAOC,MAChCnC,IAAKkC,EAAOE,MACZC,QAAUC,IACRA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOxC,IAAM,mDAIrBH,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAKqC,EAAOE,OACZxC,IAAAC,cAAA,KAAGC,UAAU,gBAAgBoC,EAAOO,YAAY,mCCD/CC,MAvCDtC,IAA0C,IAAzC,mBAAEuC,EAAkB,YAAEC,GAAaxC,EAChD,MAAOyC,EAAUC,GAAenB,mBAAS,KAClCoB,EAAUC,GAAerB,mBAAS,IACnCsB,EAAWC,cAcjB,OACEtD,IAAAC,cAAA,QAAMsD,SAbanC,UACnBsB,EAAEc,iBACF,IACE,MAAM7D,QAAiBjB,EAAI+E,KAAK,cAAe,CAAER,WAAUE,aAC3DH,EAAYrD,EAASC,KAAKR,OAC1BiE,EAAS,KACT,MAAO7D,GACPV,QAAQU,MAAM,eAAgBA,GAC9BiC,MAAM,gEAKsBvB,UAAU,cACtCF,IAAAC,cAAA,UAAI,8CACJD,IAAAC,cAAA,SACEyD,KAAK,OACLC,YAAY,WACZC,MAAOX,EACPY,SAAWnB,GAAMQ,EAAYR,EAAEC,OAAOiB,OACtCE,UAAQ,IAEV9D,IAAAC,cAAA,SACEyD,KAAK,WACLC,YAAY,WACZC,MAAOT,EACPU,SAAWnB,GAAMU,EAAYV,EAAEC,OAAOiB,OACtCE,UAAQ,IAEV9D,IAAAC,cAAA,UAAQyD,KAAK,UAAS,oCCsCbK,MAxEGA,KAChB,MAAOvB,EAAOwB,GAAYjC,mBAAS,KAC5BkC,EAAaC,GAAkBnC,mBAAS,KACxCoC,EAAaC,GAAkBrC,mBAAS,KACxCsC,EAAcC,GAAmBvC,mBAAS,KAC1Cc,EAAa0B,GAAkBxC,mBAAS,KACxCyC,EAAUC,GAAe1C,mBAAS,KAClCf,EAAU0D,GAAe3C,mBAAS,KAClCQ,EAAOoC,GAAY5C,mBAAS,OAC5BtB,EAAYmE,GAAiB7C,mBAAS,IACvCsB,EAAWC,cAEjBtB,oBAAU,KACR6C,KACC,IAEH,MAAMA,EAAkBzD,UACtB,IACE,MAAMc,QAAYxD,EAAIyD,IAAI,eAC1ByC,EAAc1C,EAAItC,MAClB,MAAOJ,GACPV,QAAQU,MAAM,6BAA8BA,KA8BhD,OACEQ,IAAAC,cAAA,QAAMsD,SA3BanC,UACnBsB,EAAEc,iBACF,MAAMsB,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASxC,GACzBsC,EAASE,OAAO,cAAef,GAC/Ba,EAASE,OAAO,cAAeC,KAAKC,UAAUf,EAAYgB,MAAM,QAChEL,EAASE,OAAO,eAAgBC,KAAKC,UAAUb,EAAac,MAAM,QAClEL,EAASE,OAAO,cAAenC,GAC/BiC,EAASE,OAAO,WAAYR,GAC5BM,EAASE,OAAO,WAAYhE,GACxBuB,GAAOuC,EAASE,OAAO,QAASzC,GAEpC,IACE,MAAM5C,QAAiBjB,EAAI+E,KAAK,WAAYqB,EAAU,CACpDvF,QAAS,CACP,eAAgB,yBAGpBkC,MAAM,8BACN4B,EAAS,WAAW1D,EAASC,KAAKsB,KAClC,MAAOQ,GACP5C,QAAQU,MAAMkC,GACdD,MAAM,yBAKsBvB,UAAU,mBACtCF,IAAAC,cAAA,UAAI,8EACJD,IAAAC,cAAA,SAAOyD,KAAK,OAAOC,YAAY,iCAAQC,MAAOpB,EAAOqB,SAAWnB,GAAMsB,EAAStB,EAAEC,OAAOiB,OAAQE,UAAQ,IACxG9D,IAAAC,cAAA,YAAU0D,YAAY,iCAAQC,MAAOK,EAAaJ,SAAWnB,GAAMwB,EAAexB,EAAEC,OAAOiB,OAAQE,UAAQ,IAC3G9D,IAAAC,cAAA,YAAU0D,YAAY,wGAAwBC,MAAOO,EAAaN,SAAWnB,GAAM0B,EAAe1B,EAAEC,OAAOiB,OAAQE,UAAQ,IAC3H9D,IAAAC,cAAA,YAAU0D,YAAY,iIAA6BC,MAAOS,EAAcR,SAAWnB,GAAM4B,EAAgB5B,EAAEC,OAAOiB,OAAQE,UAAQ,IAClI9D,IAAAC,cAAA,SAAOyD,KAAK,SAASC,YAAY,qFAAoBC,MAAOf,EAAagB,SAAWnB,GAAM6B,EAAe7B,EAAEC,OAAOiB,OAAQE,UAAQ,IAClI9D,IAAAC,cAAA,SAAOyD,KAAK,SAASC,YAAY,mFAAkBC,MAAOY,EAAUX,SAAWnB,GAAM+B,EAAY/B,EAAEC,OAAOiB,OAAQE,UAAQ,IAC1H9D,IAAAC,cAAA,UAAQ2D,MAAO5C,EAAU6C,SAAWnB,GAAMgC,EAAYhC,EAAEC,OAAOiB,OAAQE,UAAQ,GAC7E9D,IAAAC,cAAA,UAAQ2D,MAAM,IAAG,iEAChBnD,EAAWM,IAAIqE,GACdpF,IAAAC,cAAA,UAAQgB,IAAKmE,EAAIlE,IAAK0C,MAAOwB,EAAIlE,KAAMkE,EAAIjE,QAG/CnB,IAAAC,cAAA,SAAOyD,KAAK,OAAOG,SAAWnB,GAAMiC,EAASjC,EAAEC,OAAO0C,MAAM,IAAKC,OAAO,UAAUxB,UAAQ,IAC1F9D,IAAAC,cAAA,UAAQyD,KAAK,UAAS,6DCpCb6B,MA/BKA,KAClB,MAAOpE,EAAMqE,GAAWzD,mBAAS,IAC3BsB,EAAWC,cAcjB,OACEtD,IAAAC,cAAA,QAAMsD,SAbanC,UACnBsB,EAAEc,iBACF,UACQ9E,EAAI+E,KAAK,cAAe,CAAEtC,SAChCM,MAAM,gCACN4B,EAAS,KACT,MAAO3B,GACP5C,QAAQU,MAAM,yBAA0BkC,GACxCD,MAAM,2BAKsBvB,UAAU,qBACtCF,IAAAC,cAAA,UAAI,gGACJD,IAAAC,cAAA,SACEyD,KAAK,OACLE,MAAOzC,EACP0C,SAAWnB,GAAM8C,EAAQ9C,EAAEC,OAAOiB,OAClCD,YAAY,gEACZG,UAAQ,IAEV9D,IAAAC,cAAA,UAAQyD,KAAK,UAAS,yECiCb+B,MA3DOjF,IAAkB,IAAjB,QAAEI,GAASJ,EAChC,MAAO8B,EAAQoD,GAAa3D,mBAAS,OAC/B,GAAE4D,GAAOC,cAcf,OAZA5D,oBAAU,KACYZ,WAClB,IACE,MAAMc,QAAYxD,EAAIyD,IAAI,YAAYwD,GACtCD,EAAUxD,EAAItC,MACd,MAAO8B,GACP5C,QAAQU,MAAM,yBAA0BkC,KAG5CmE,IACC,CAACF,IAECrD,EAGHtC,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,UAAKqC,EAAOE,OACZxC,IAAAC,cAAA,SAAG,gDAAWqC,EAAOO,YAAY,6BACjC7C,IAAAC,cAAA,SAAG,6BAAOqC,EAAOkC,UACjBxE,IAAAC,cAAA,UAAI,yCACJD,IAAAC,cAAA,UACGqC,EAAO6B,YAAYpD,IAAI,CAAC+E,EAAYC,IACnC/F,IAAAC,cAAA,MAAIgB,IAAK8E,GAAQD,KAGrB9F,IAAAC,cAAA,UAAI,kEACJD,IAAAC,cAAA,UACGqC,EAAO+B,aAAatD,IAAI,CAACiF,EAAaD,IACrC/F,IAAAC,cAAA,MAAIgB,IAAK8E,GAAQC,KAGpBpF,GACCZ,IAAAC,cAAA,WACED,IAAAC,cAACI,IAAI,CAACC,GAAI,gBAAgBgC,EAAOpB,KAC/BlB,IAAAC,cAAA,cAAQ,8DAMhBD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OACEE,IAAKmC,EAAOC,MACZnC,IAAKkC,EAAOE,MACZC,QAAUC,IACRA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOxC,IAAM,qDAnCLH,IAAAC,cAAA,WAAK,eC0FZgG,MA1GIA,KACjB,MAAM,GAAEN,GAAOC,cACTvC,EAAWC,eACVhB,EAAQoD,GAAa3D,mBAAS,OAC9BtB,EAAYmE,GAAiB7C,mBAAS,KACtC+C,EAAUoB,GAAenE,mBAAS,CACvCS,MAAO,GACPyB,YAAa,GACbE,YAAa,GACbE,aAAc,GACdxB,YAAa,GACb2B,SAAU,GACVxD,SAAU,GACVuB,MAAO,QAEFC,EAAOwB,GAAYjC,mBAAS,KAC5BkC,EAAaC,GAAkBnC,mBAAS,KACxCoC,EAAaC,GAAkBrC,mBAAS,KACxCsC,EAAcC,GAAmBvC,mBAAS,KAC1Cc,EAAa0B,GAAkBxC,mBAAS,KACxCyC,EAAUC,GAAe1C,mBAAS,KAClCf,EAAU0D,GAAe3C,mBAAS,KAClCQ,EAAOoC,GAAY5C,mBAAS,MAEnCC,oBAAU,KAERtD,EAAIyD,IAAI,YAAYwD,GACjBQ,KAAKxG,IACJ+F,EAAU/F,EAASC,MACnBsG,EAAY,CACV1D,MAAO7C,EAASC,KAAK4C,MACrByB,YAAatE,EAASC,KAAKqE,YAC3BE,YAAac,KAAKC,UAAUvF,EAASC,KAAKuE,aAC1CE,aAAcY,KAAKC,UAAUvF,EAASC,KAAKyE,cAC3CxB,YAAalD,EAASC,KAAKiD,YAC3B2B,SAAU7E,EAASC,KAAK4E,SACxBxD,SAAUrB,EAASC,KAAKoB,SACxBuB,MAAO5C,EAASC,KAAK2C,UAGxB6D,MAAM5G,IACLV,QAAQU,MAAM,yBAA0BA,GACxCiC,MAAM,kCAIV/C,EAAIyD,IAAI,eACLgE,KAAKxG,GAAYiF,EAAcjF,EAASC,OACxCwG,MAAM5G,IACLV,QAAQU,MAAM,6BAA8BA,GAC5CiC,MAAM,kCAET,CAACkE,IA4BJ,OAAKrD,EAIHtC,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,QAAMsD,SAtBWnC,UACnBsB,EAAEc,iBACF,IACE,MAAM6C,EAAc,IACfvB,EACHX,YAAac,KAAKqB,MAAMxB,EAASX,aACjCE,aAAcY,KAAKqB,MAAMxB,EAAST,eAE9B1E,QAAiBjB,EAAI6H,IAAI,YAAYZ,EAAMU,GACjD5E,MAAM,gCACN4B,EAAS,WAAW1D,EAASC,KAAKsB,KAClC,MAAO1B,GACPV,QAAQU,MAAM,yBAA0BA,GACxCiC,MAAM,8BASwBvB,UAAU,mBACtCF,IAAAC,cAAA,UAAI,iEACJD,IAAAC,cAAA,SAAOyD,KAAK,OAAOC,YAAY,iCAAQC,MAAOpB,EAAOqB,SAAWnB,GAAMsB,EAAStB,EAAEC,OAAOiB,OAAQE,UAAQ,IACxG9D,IAAAC,cAAA,YAAU0D,YAAY,iCAAQC,MAAOK,EAAaJ,SAAWnB,GAAMwB,EAAexB,EAAEC,OAAOiB,OAAQE,UAAQ,IAC3G9D,IAAAC,cAAA,YAAU0D,YAAY,wGAAwBC,MAAOO,EAAaN,SAAWnB,GAAM0B,EAAe1B,EAAEC,OAAOiB,OAAQE,UAAQ,IAC3H9D,IAAAC,cAAA,YAAU0D,YAAY,iIAA6BC,MAAOS,EAAcR,SAAWnB,GAAM4B,EAAgB5B,EAAEC,OAAOiB,OAAQE,UAAQ,IAClI9D,IAAAC,cAAA,SAAOyD,KAAK,SAASC,YAAY,qFAAoBC,MAAOf,EAAagB,SAAWnB,GAAM6B,EAAe7B,EAAEC,OAAOiB,OAAQE,UAAQ,IAClI9D,IAAAC,cAAA,SAAOyD,KAAK,SAASC,YAAY,mFAAkBC,MAAOY,EAAUX,SAAWnB,GAAM+B,EAAY/B,EAAEC,OAAOiB,OAAQE,UAAQ,IAC1H9D,IAAAC,cAAA,UAAQ2D,MAAO5C,EAAU6C,SAAWnB,GAAMgC,EAAYhC,EAAEC,OAAOiB,OAAQE,UAAQ,GAC7E9D,IAAAC,cAAA,UAAQ2D,MAAM,IAAG,iEAChBnD,EAAWM,IAAIqE,GACdpF,IAAAC,cAAA,UAAQgB,IAAKmE,EAAIlE,IAAK0C,MAAOwB,EAAIlE,KAAMkE,EAAIjE,QAG/CnB,IAAAC,cAAA,SAAOyD,KAAK,OAAOG,SAAWnB,GAAMiC,EAASjC,EAAEC,OAAO0C,MAAM,IAAKC,OAAO,YACxEtF,IAAAC,cAAA,UAAQyD,KAAK,UAAS,6DAnBnB1D,IAAAC,cAAA,WAAK,eClEDuG,MAhBShG,IAAoC,IAAnC,gBAAEiG,EAAe,SAAEC,GAAUlG,EACpD,OACER,IAAAC,cAAA,OAAKC,UAAU,oBACZuG,EACCzG,IAAAC,cAAAD,IAAA2G,SAAA,KACE3G,IAAAC,cAAA,UAAQa,QAAS4F,EAAUxG,UAAU,iCAAgC,8CACrEF,IAAAC,cAACI,IAAI,CAACC,GAAG,cAAcJ,UAAU,qCAAoC,2DACrEF,IAAAC,cAACI,IAAI,CAACC,GAAG,gBAAgBJ,UAAU,uCAAsC,wEAG3EF,IAAAC,cAACI,IAAI,CAACC,GAAG,SAASJ,UAAU,gCAA+B,gDC0FpD0G,MAzFf,WACE,MAAOH,EAAiB1D,GAAsBhB,oBAAS,IAChDnB,EAASiG,GAAc9E,oBAAS,IAChCtB,EAAYmE,GAAiB7C,mBAAS,KACtCrB,EAAkBoG,GAAuB/E,mBAAS,MAEzDC,oBAAU,KACR+E,IAEArI,EAAIyD,IAAI,eACLgE,KAAKxG,GAAYiF,EAAcjF,EAASC,OACxCwG,MAAM5G,GAASV,QAAQU,MAAM,6BAA8BA,KAC7D,IAEH,MAAMuH,EAAkBA,KACR1H,aAAaC,QAAQ,SAEjCZ,EAAIyD,IAAI,YACLgE,KAAKjE,IACJa,GAAmB,GACnB8D,EAAW3E,EAAItC,KAAKgB,WAErBwF,MAAM1E,IACL5C,QAAQU,MAAMkC,GACdqB,GAAmB,GACnB8D,GAAW,GACXxH,aAAa2H,WAAW,YAG5BjE,GAAmB,GACnB8D,GAAW,KA0Bf,OACE7G,IAAAC,cAACgH,IAAM,KACLjH,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAAA,OAAKC,UAAU,8BACfF,IAAAC,cAACM,EAAc,CACbE,WAAYA,EACZC,iBAAkBA,EAClBC,iBAnBoBa,IAC5BsF,EAAoBtF,IAmBZZ,QAASA,EACTC,kBAjBgBA,KACxBnC,EAAIyD,IAAI,eACLgE,KAAKxG,GAAYiF,EAAcjF,EAASC,OACxCwG,MAAM5G,GAASV,QAAQU,MAAM,6BAA8BA,QAiB1DQ,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAACiH,IAAM,KACLlH,IAAAC,cAACkH,IAAK,CAACC,KAAK,IAAIC,QAASrH,IAAAC,cAAC2B,EAAU,CAACnB,WAAYA,EAAYC,iBAAkBA,MAC/EV,IAAAC,cAACkH,IAAK,CAACC,KAAK,SAASC,QAASZ,EAAkBzG,IAAAC,cAACqH,IAAQ,CAAChH,GAAG,MAASN,IAAAC,cAAC6C,EAAK,CAACE,YAhClE5D,IACnBC,aAAakI,QAAQ,QAASnI,GAC9B2H,SA+BQ/G,IAAAC,cAACkH,IAAK,CAACC,KAAK,cAAcC,QAASZ,GAAmB7F,EAAUZ,IAAAC,cAAC8D,EAAS,MAAM/D,IAAAC,cAACqH,IAAQ,CAAChH,GAAG,aAC7FN,IAAAC,cAACkH,IAAK,CAACC,KAAK,gBAAgBC,QAASZ,GAAmB7F,EAAUZ,IAAAC,cAACsF,EAAW,MAAMvF,IAAAC,cAACqH,IAAQ,CAAChH,GAAG,aACjGN,IAAAC,cAACkH,IAAK,CAACC,KAAK,cAAcC,QAASrH,IAAAC,cAACwF,EAAa,CAAC7E,QAASA,MAC3DZ,IAAAC,cAACkH,IAAK,CAACC,KAAK,mBAAmBC,QAASZ,GAAmB7F,EAAUZ,IAAAC,cAACgG,EAAU,MAAMjG,IAAAC,cAACqH,IAAQ,CAAChH,GAAG,eAGvGN,IAAAC,cAACuG,EAAe,CACdC,gBAAiBA,EACjBC,SAhDac,KACnBzE,GAAmB,GACnB8D,GAAW,GACXxH,aAAa2H,WAAW,SACxBlI,QAAQC,IAAI,yBCxCD0I,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,KAAK3F,IAAkD,IAAjD,OAAEoH,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASxH,EACpEoH,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCCdO,IAASC,OACPlI,IAAAC,cAACD,IAAMmI,WAAU,KACfnI,IAAAC,cAAC2G,EAAG,OAENwB,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.2c9e7e8e.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \n  (process.env.NODE_ENV === 'production' \n    ? 'https://pickleswithpickles.oa.r.appspot.com/api' \n    : 'http://localhost:8081/api');\n\nexport const IMAGE_BASE_URL = process.env.REACT_APP_IMAGE_BASE_URL || \n  (process.env.NODE_ENV === 'production' \n    ? 'https://pickleswithpickles.oa.r.appspot.com' \n    : 'http://localhost:8081');\n","import axios from 'axios';\nimport { API_BASE_URL } from '../config';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\nconsole.log('API Base URL:', API_BASE_URL);\n\n// Interceptor to log requests\napi.interceptors.request.use(request => {\n  console.log('Starting Request', request);\n  return request;\n});\n\n// Interceptor to include the token in headers\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n      console.log('Authorization header set:', config.headers['Authorization']);\n    } else {\n      console.log('No token found in localStorage');\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor to handle responses and errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n      console.error('Response headers:', error.response.headers);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n\nexport const getRecipes = () => api.get('/recipes');","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Banner = () => {\n  return (\n    <div className=\"banner-container\">\n      <div className=\"banner-icons\">\n        <img src=\"/food.png\" alt=\"Food\" className=\"banner-icon food-icon\" />\n        <img src=\"/pickles.png\" alt=\"Pickles\" className=\"banner-icon pickles-icon\" />\n        <img src=\"/cooking.png\" alt=\"Cooking\" className=\"banner-icon cooking-icon\" />\n        <img src=\"/bottle.png\" alt=\"Bottle\" className=\"banner-icon bottle-icon\" />\n      </div>\n      <div className=\"banner\">\n        <Link to=\"/\" className=\"banner-title\">\n          <h1>חמוצים עם חמוצים</h1>\n        </Link>\n        <div className=\"banner-separator\"></div>\n        <p>המתכונים הכי טעימים לחמוצים ביתיים</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from 'react';\nimport api from '../services/api'; // Use the configured API instance\n\nconst CategoryFilter = ({ categories, selectedCategory, onCategoryChange, isAdmin, refreshCategories }) => {\n  const deleteCategory = async (categoryId) => {\n    if (window.confirm('האם אתה בטוח שברצונך למחוק קטגוריה זו?')) {\n      try {\n        await api.delete(`/categories/${categoryId}`);\n        alert('הקטגוריה נמחקה בהצלחה!');\n        if (refreshCategories) {\n          refreshCategories(); // Refresh the categories list after deletion\n        }\n      } catch (err) {\n        console.error('Error deleting category:', err);\n        alert('שגיאה במחיקת הקטגוריה');\n      }\n    }\n  };\n\n  return (\n    <div className=\"category-filter\">\n      <button\n        onClick={() => onCategoryChange(null)}\n        className={selectedCategory === null ? 'active' : ''}\n      >\n        All\n      </button>\n      {categories.map(category => (\n        <div key={category._id} className=\"category-button-group\">\n          <button\n            onClick={() => onCategoryChange(category._id)}\n            className={selectedCategory === category._id ? 'active' : ''}\n          >\n            {category.name}\n          </button>\n          {isAdmin && selectedCategory === category._id && (\n            <button \n              onClick={() => deleteCategory(category._id)}\n              className=\"delete-category-btn\"\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CategoryFilter;\n","import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL, IMAGE_BASE_URL } from '../config';\n\nconst RecipeList = ({ selectedCategory }) => {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    fetchRecipes();\n  }, [selectedCategory]);\n\n  const fetchRecipes = async () => {\n    try {\n      console.log('Fetching recipes from:', `${API_BASE_URL}/recipes`);\n      const res = await api.get('/recipes');\n      console.log('Recipes fetched:', res.data);\n      setRecipes(res.data);\n    } catch (err) {\n      console.error('Error fetching recipes:', err);\n    }\n  };\n\n  const filteredRecipes = selectedCategory === null \n    ? recipes \n    : recipes.filter(recipe => recipe.category && recipe.category._id === selectedCategory);\n\n  return (\n    <div className=\"recipe-list\">\n      <div className=\"recipe-grid\">\n        {filteredRecipes.map(recipe => (\n          <Link to={`/recipe/${recipe._id}`} key={recipe._id} className=\"recipe-card\">\n            {recipe.image && (\n              <img \n                src={`${IMAGE_BASE_URL}${recipe.image}`} \n                alt={recipe.title} \n                onError={(e) => {\n                  e.target.onerror = null; \n                  e.target.src = 'https://via.placeholder.com/150?text=No+Image';\n                }}\n              />\n            )}\n            <div className=\"content\">\n              <h2>{recipe.title}</h2>\n              <p className=\"cooking-time\">{recipe.cookingTime} דקות</p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;\n","import React, { useState } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = ({ setIsAuthenticated, handleLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/auth/login', { username, password });\n      handleLogin(response.data.token);\n      navigate('/');\n    } catch (error) {\n      console.error('Login failed', error);\n      alert('Login failed. Please check your credentials and try again.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      <h2>התחברות</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        required\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        required\n      />\n      <button type=\"submit\">התחבר</button>\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate } from 'react-router-dom';\n\nconst AddRecipe = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [cookingTime, setCookingTime] = useState('');\n  const [servings, setServings] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const res = await api.get('/categories');\n      setCategories(res.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('ingredients', JSON.stringify(ingredients.split('\\n'))); // Split into array\n    formData.append('instructions', JSON.stringify(instructions.split('\\n'))); // Split into array\n    formData.append('cookingTime', cookingTime);\n    formData.append('servings', servings);\n    formData.append('category', category);\n    if (image) formData.append('image', image);\n\n    try {\n      const response = await api.post('/recipes', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        }\n      });\n      alert('Recipe added successfully!');\n      navigate(`/recipe/${response.data._id}`); // Navigate to the new recipe\n    } catch (err) {\n      console.error(err);\n      alert('Error adding recipe');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"add-recipe-form\">\n      <h2>הוסף מתכון חדש</h2>\n      <input type=\"text\" placeholder=\"כותרת\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n      <textarea placeholder=\"תיאור\" value={description} onChange={(e) => setDescription(e.target.value)} required />\n      <textarea placeholder=\"מצרכים (אחד בכל שורה)\" value={ingredients} onChange={(e) => setIngredients(e.target.value)} required />\n      <textarea placeholder=\"הוראות הכנה (אחת בכל שורה)\" value={instructions} onChange={(e) => setInstructions(e.target.value)} required />\n      <input type=\"number\" placeholder=\"זמן בישול (בדקות)\" value={cookingTime} onChange={(e) => setCookingTime(e.target.value)} required />\n      <input type=\"number\" placeholder=\"כמות הגשות למנה\" value={servings} onChange={(e) => setServings(e.target.value)} required />\n      <select value={category} onChange={(e) => setCategory(e.target.value)} required>\n        <option value=\"\">בחר קטגוריה</option>\n        {categories.map(cat => (\n          <option key={cat._id} value={cat._id}>{cat.name}</option>\n        ))}\n      </select>\n      <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} accept=\"image/*\" required />\n      <button type=\"submit\">הוסף מתכון</button>\n    </form>\n  );\n};\n\nexport default AddRecipe;\n","import React, { useState } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate } from 'react-router-dom';\n\nconst AddCategory = () => {\n  const [name, setName] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await api.post('/categories', { name });\n      alert('Category added successfully!');\n      navigate('/');\n    } catch (err) {\n      console.error('Error adding category:', err);\n      alert('Error adding category');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"add-category-form\">\n      <h2>הוסף קטגוריה חדשה</h2>\n      <input \n        type=\"text\" \n        value={name} \n        onChange={(e) => setName(e.target.value)} \n        placeholder=\"שם הקטגוריה\" \n        required \n      />\n      <button type=\"submit\">הוסף קטגוריה</button>\n    </form>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport api from '../services/api'; // Use the configured API instance\n\nconst RecipeDetails = ({ isAdmin }) => {\n  const [recipe, setRecipe] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const res = await api.get(`/recipes/${id}`);\n        setRecipe(res.data);\n      } catch (err) {\n        console.error('Error fetching recipe:', err);\n      }\n    };\n    fetchRecipe();\n  }, [id]);\n\n  if (!recipe) return <div>Loading...</div>;\n\n  return (\n    <div className=\"recipe-details\">\n      <div className=\"recipe-info\">\n        <h1>{recipe.title}</h1>\n        <p>זמן הכנה: {recipe.cookingTime} דקות</p>\n        <p>מנות: {recipe.servings}</p>\n        <h3>מצרכים:</h3>\n        <ul>\n          {recipe.ingredients.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n        </ul>\n        <h3>הוראות הכנה:</h3>\n        <ol>\n          {recipe.instructions.map((instruction, index) => (\n            <li key={index}>{instruction}</li>\n          ))}\n        </ol>\n        {isAdmin && (\n          <div>\n            <Link to={`/edit-recipe/${recipe._id}`}>\n              <button>ערוך מתכון</button>\n            </Link>\n            {/* Add delete functionality if needed */}\n          </div>\n        )}\n      </div>\n      <div className=\"recipe-image\">\n        <img \n          src={recipe.image} \n          alt={recipe.title} \n          onError={(e) => {\n            e.target.onerror = null; \n            e.target.src = 'https://via.placeholder.com/150?text=No+Image';\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeDetails;\n","import React, { useState, useEffect } from 'react';\nimport api from '../services/api'; // Use the configured API instance\nimport { useNavigate, useParams } from 'react-router-dom';\n\nconst EditRecipe = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [recipe, setRecipe] = useState(null);\n  const [categories, setCategories] = useState([]); // Define categories state\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    ingredients: '',\n    instructions: '',\n    cookingTime: '',\n    servings: '',\n    category: '',\n    image: null,\n  });\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [cookingTime, setCookingTime] = useState('');\n  const [servings, setServings] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    // Fetch the recipe data\n    api.get(`/recipes/${id}`)\n      .then(response => {\n        setRecipe(response.data);\n        setFormData({\n          title: response.data.title,\n          description: response.data.description,\n          ingredients: JSON.stringify(response.data.ingredients),\n          instructions: JSON.stringify(response.data.instructions),\n          cookingTime: response.data.cookingTime,\n          servings: response.data.servings,\n          category: response.data.category,\n          image: response.data.image,\n        });\n      })\n      .catch(error => {\n        console.error('Error fetching recipe:', error);\n        alert('Failed to fetch recipe data.');\n      });\n\n    // Fetch categories\n    api.get('/categories')\n      .then(response => setCategories(response.data))\n      .catch(error => {\n        console.error('Error fetching categories:', error);\n        alert('Failed to fetch categories.');\n      });\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    if (name === 'image') {\n      setFormData({ ...formData, image: files[0] });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const updatedData = {\n        ...formData,\n        ingredients: JSON.parse(formData.ingredients),\n        instructions: JSON.parse(formData.instructions),\n      };\n      const response = await api.put(`/recipes/${id}`, updatedData);\n      alert('Recipe updated successfully!');\n      navigate(`/recipe/${response.data._id}`);\n    } catch (error) {\n      console.error('Error updating recipe:', error);\n      alert('Failed to update recipe.');\n    }\n  };\n\n  if (!recipe) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"edit-recipe-container\">\n      <form onSubmit={handleSubmit} className=\"add-recipe-form\">\n        <h2>עריכת מתכון</h2>\n        <input type=\"text\" placeholder=\"כותרת\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n        <textarea placeholder=\"תיאור\" value={description} onChange={(e) => setDescription(e.target.value)} required />\n        <textarea placeholder=\"מצרכים (אחד בכל שורה)\" value={ingredients} onChange={(e) => setIngredients(e.target.value)} required />\n        <textarea placeholder=\"הוראות הכנה (אחת בכל שורה)\" value={instructions} onChange={(e) => setInstructions(e.target.value)} required />\n        <input type=\"number\" placeholder=\"זמן בישול (בדקות)\" value={cookingTime} onChange={(e) => setCookingTime(e.target.value)} required />\n        <input type=\"number\" placeholder=\"כמות הגשות למנה\" value={servings} onChange={(e) => setServings(e.target.value)} required />\n        <select value={category} onChange={(e) => setCategory(e.target.value)} required>\n          <option value=\"\">בחר קטגוריה</option>\n          {categories.map(cat => (\n            <option key={cat._id} value={cat._id}>{cat.name}</option>\n          ))}\n        </select>\n        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} accept=\"image/*\" />\n        <button type=\"submit\">עדכן מתכון</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditRecipe;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FloatingButtons = ({ isAuthenticated, onLogout }) => {\n  return (\n    <div className=\"floating-buttons\">\n      {isAuthenticated ? (\n        <>\n          <button onClick={onLogout} className=\"floating-button logout-button\">התנתקות</button>\n          <Link to=\"/add-recipe\" className=\"floating-button add-recipe-button\">הוסף מתכון</Link>\n          <Link to=\"/add-category\" className=\"floating-button add-category-button\">הוסף קטגוריה</Link>\n        </>\n      ) : (\n        <Link to=\"/login\" className=\"floating-button login-button\">התחברות</Link>\n      )}\n    </div>\n  );\n};\n\nexport default FloatingButtons;\n","import React, { useState, useEffect } from 'react';\nimport './App.css'; // Ensure this import exists\nimport api from './services/api'; // Adjust the path if necessary\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Banner from './components/Banner';\nimport CategoryFilter from './components/CategoryFilter';\nimport RecipeList from './components/RecipeList';\nimport Login from './components/Login';\nimport AddRecipe from './components/AddRecipe';\nimport AddCategory from './components/AddCategory';\nimport RecipeDetails from './components/RecipeDetails';\nimport EditRecipe from './components/EditRecipe';\nimport FloatingButtons from './components/FloatingButtons';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  useEffect(() => {\n    checkAuthStatus();\n    // Fetch categories when the component mounts\n    api.get('/categories')\n      .then(response => setCategories(response.data))\n      .catch(error => console.error('Error fetching categories:', error));\n  }, []);\n\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.get('/auth/me')\n        .then(res => {\n          setIsAuthenticated(true);\n          setIsAdmin(res.data.isAdmin);\n        })\n        .catch(err => {\n          console.error(err);\n          setIsAuthenticated(false);\n          setIsAdmin(false);\n          localStorage.removeItem('token');\n        });\n    } else {\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n    }\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setIsAdmin(false);\n    localStorage.removeItem('token');\n    console.log('User logged out');\n  };\n\n  const handleLogin = (token) => {\n    localStorage.setItem('token', token);\n    checkAuthStatus();\n  };\n\n  const handleCategoryChange = (categoryId) => {\n    setSelectedCategory(categoryId);\n  };\n\n  const refreshCategories = () => {\n    api.get('/categories')\n      .then(response => setCategories(response.data))\n      .catch(error => console.error('Error fetching categories:', error));\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"fixed-header\">\n          <Banner />\n          <div className=\"banner-category-separator\"></div>\n          <CategoryFilter \n            categories={categories}\n            selectedCategory={selectedCategory}\n            onCategoryChange={handleCategoryChange}\n            isAdmin={isAdmin}\n            refreshCategories={refreshCategories}\n          />\n        </div>\n        <div className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<RecipeList categories={categories} selectedCategory={selectedCategory} />} />\n            <Route path=\"/login\" element={isAuthenticated ? <Navigate to=\"/\" /> : <Login handleLogin={handleLogin} />} />\n            <Route path=\"/add-recipe\" element={isAuthenticated && isAdmin ? <AddRecipe /> : <Navigate to=\"/login\" />} />\n            <Route path=\"/add-category\" element={isAuthenticated && isAdmin ? <AddCategory /> : <Navigate to=\"/login\" />} />\n            <Route path=\"/recipe/:id\" element={<RecipeDetails isAdmin={isAdmin} />} />\n            <Route path=\"/edit-recipe/:id\" element={isAuthenticated && isAdmin ? <EditRecipe /> : <Navigate to=\"/login\" />} />\n          </Routes>\n        </div>\n        <FloatingButtons \n          isAuthenticated={isAuthenticated} \n          onLogout={handleLogout}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css'; // Your main CSS\n// Remove or adjust the following if not needed\n// import './styles.css'; // Import if moved to src/\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}